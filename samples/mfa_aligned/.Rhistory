# For fun, let's do classic vowel space stuff (maybe for each speaker, and as a function of stress and/or duration) and see what it looks like with zero hand correction.
#
# We're going to use the homebrewed formant measurements, not FastTrack
######################################
# Packages
######################################
library(tidyverse)
library(stringr)
######################################
# Set working directory
######################################
computer = "Tiamat"
setwd(paste0("C:/Users/",computer,"Dropbox/GIT/Raw_audio_pipeline/Raw-audio-pipeline/samples/mfa_aligned/")) # Where files are stored.
# For fun, let's do classic vowel space stuff (maybe for each speaker, and as a function of stress and/or duration) and see what it looks like with zero hand correction.
#
# We're going to use the homebrewed formant measurements, not FastTrack
######################################
# Packages
######################################
library(tidyverse)
library(stringr)
######################################
# Set working directory
######################################
computer = "Tiamat"
setwd(paste0("C:/Users/",computer,"/Dropbox/GIT/Raw_audio_pipeline/Raw-audio-pipeline/samples/mfa_aligned/")) # Where files are stored.
# C:\Users\Tiamat\Dropbox\GIT\Raw_audio_pipeline\Raw-audio-pipeline\samples\mfa_aligned
######################################
# Choose a colorblind friendly palette
######################################
colorSetCB=palette.colors(n = 8,palette = "R4")
colorSet<-colorSetCB[c(1,2,4,3,8,6)]
showColor<-function(pal){
hist(seq(0,length(pal)),col=pal,breaks=length(pal))
}
# Check color schemes if desired.
# showColor(colorSetCB)
# showColor(colorSet)
######################################
# Read in data
######################################
# Formant measurements produced by a handmade script:
formants.homebrewed <- read.csv("formant_tracks.txt",sep="\t")
formants <- formants.homebrewed
formants
######################################
# Get some summary stats
######################################
formants %>% group_by(formant) %>% summarize(mean=mean(freq,na.rm=T),
median=median(freq,na.rm=T))
formants %>% group_by(v,formant) %>% summarize(mean=mean(freq,na.rm=T),
median=median(freq,na.rm=T))
formants %>% group_by(vowel.code,formant) %>% summarize(mean=mean(freq,na.rm=T),
median=median(freq,na.rm=T))
######################################
# Plot raw formants to make sure things look okay, grouped by token and speaker.
######################################
raw.formants.spk<-ggplot(data = formants)+
geom_path(aes(x=step,y=freq,color=formant,
group=interaction(token.code,formant)),alpha=0.5)+
scale_color_manual(values=colorSet)+
theme_bw(base_size = 24)+
theme(axis.text = element_text(size=12))+
guides(color="none")+
scale_x_continuous(breaks = seq(min(formants$step,na.rm=T),max(formants$step,na.rm=T),20))+
xlab("Normalized time (%) of vowel preceding coda C")+
scale_y_continuous(breaks = seq(0,max(formants$freq,na.rm=T),200))
raw.formants.spk+facet_grid(v~speaker)
raw.formants.spk+facet_grid(vowel.code~speaker)
######################################
# Plot raw formants to make sure things look okay, grouped by token and speaker.
######################################
raw.formants.spk<-ggplot(data = formants)+
geom_path(aes(x=step,y=freq,color=formant,
group=interaction(token.code,formant)),alpha=0.5)+
scale_color_manual(values=colorSet)+
theme_bw(base_size = 24)+
theme(axis.text = element_text(size=12))+
guides(color="none")+
scale_x_continuous(breaks = seq(min(formants$step,na.rm=T),max(formants$step,na.rm=T),20))+
xlab("Normalized time (%) of vowel preceding coda C")+
scale_y_continuous(breaks = seq(0,max(formants$freq,na.rm=T),200))
raw.formants.spk
# For fun, let's do classic vowel space stuff (maybe for each speaker, and as a function of stress and/or duration) and see what it looks like with zero hand correction.
#
# We're going to use the homebrewed formant measurements, not FastTrack
######################################
# Packages
######################################
library(tidyverse)
library(stringr)
######################################
# Set working directory
######################################
computer = "Tiamat"
setwd(paste0("C:/Users/",computer,"/Dropbox/GIT/Raw_audio_pipeline/Raw-audio-pipeline/samples/mfa_aligned/")) # Where files are stored.
######################################
# Choose a colorblind friendly palette
######################################
colorSetCB=palette.colors(n = 8,palette = "R4")
colorSet<-colorSetCB[c(1,2,4,3,8,6)]
showColor<-function(pal){
hist(seq(0,length(pal)),col=pal,breaks=length(pal))
}
# Check color schemes if desired.
# showColor(colorSetCB)
# showColor(colorSet)
######################################
# Read in data
######################################
# Formant measurements produced by a handmade script:
formants.homebrewed <- read.csv("formant_tracks.txt",sep="\t")
formants <- formants.homebrewed
######################################
# Get some summary stats
######################################
formants %>% group_by(formant) %>% summarize(mean=mean(freq,na.rm=T),
median=median(freq,na.rm=T))
formants %>% group_by(vowel.code,formant) %>% summarize(mean=mean(freq,na.rm=T),
median=median(freq,na.rm=T))
formants <- formants %>% mutate(vqual = substr(vowel.code,1,2),
stress = substr(vowel.code,3,3),
)
formants
summary(formants$stress)
summary(factor(formants$stress))
summary(factor(formants$formants))
summary(factor(formants$vqual))
